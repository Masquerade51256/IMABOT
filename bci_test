import argparse
import time
import numpy as np

import brainflow
from brainflow.board_shim import BoardShim, BrainFlowInputParams
from brainflow.data_filter import DataFilter, FilterTypes, AggOperations

def mian():
    parser = argparse.ArgumentParser()
    parser.add_argument('--serial-port', type=str, help='serial port', required=False, default='COM5')
    parser.add_argument('--board-id', type=int, help='board id', required=False, default=0)
    parser.add_argument('--log', action='store_true')
    args = parser.parse_args()

    params = BrainFlowInputParams()
    params.serial_port = args.serial_port

    if(args.log):
        BoardShim.enable_dev_board_logger()
    else:
        BoardShim.disable_board_logger()
    board = BoardShim(args.board_id, params)
    board.prepare_session()

    board.start_stream()
    # board.start_stream(45000, args.streamer_params)
    time.sleep(10)
    data = board.get_board_data()
    board.stop_stream()
    board.release_session()
    print('gonna print data')
    print(data)

if __name__ == "__main__":
    mian()
